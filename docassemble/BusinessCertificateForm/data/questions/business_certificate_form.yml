---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
---
metadata:
  title: |
    File a Business Certificate for the City of Cambridge
  short title: |
    Business Certificate Form
  tags:
    - Other
  authors:
    - Ryan Ditcham
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["business_certificate_form"]
data:
  al_weaver_version: "1.7.0"
  generated on: "2022-11-07"
  title: >-
    File a Business Certificate for the City of Cambridge
  short title: >-
    Business Certificate Form
  description: |-
    Get help filling out your Business Certificate form and instructions on next steps to take.
  original_form: >-
    https://www.cambridgema.gov/-/media/Files/cityclerksoffice/fillableforms/businesscertificateform.pdf
  allowed courts: 
    - "Boston Municipal Court"
  categories:
    - "Business Formation"
  typical role: "na"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'business_certificate_form'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-BusinessCertificateForm'
---
code: |
  interview_short_title = "File a Business Certificate Form for the City of Cambridge"
---
code: |
  al_form_type = "other" 
---
objects:
  - emergency: ALPeopleList.using(there_are_any=True)
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - business: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_business_certificate_form: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_business_certificate_form
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["business_certificate_form"]["allowed courts"]
  nav.set_section("review_business_certificate_form")
  user_role = "na"
  users[3].name.first
  # These nested if statements take care of the New Business or Business Renewal question issue
  new_business_yes
  if new_business_yes == False:
    business_renewal_yes
    if business_renewal_yes == False:
      exit_or_restart
  business1_dba_name
  business1_type1
  business[0].address.address
  business[0].phone_number
  users[0].name.first
  users[0].address.address
  users[1].name.first
  users[1].address.address
  users[2].name.first
  users[2].address.address
  users_signing
  # This only brings up the signature questions if the user confirms that the attesting individuals will be signing today
  if users_signing == True:
    users[0].signature
    users[1].signature
    users[2].signature
    signature_date
  business1_security_question
  emergency[0].name.first
  emergency[0].address.address
  emergency[0].phone_number
  emergency[1].name.first
  emergency[1].address.address
  emergency[1].phone_number
  third_emergency_contact_yes
  # This only brings up the questions for the third emergency contact if the user confirms that there is a third emergency contact present on the form
  if third_emergency_contact_yes == True:
    emergency[2].name.first
    emergency[2].address.address
    emergency[2].phone_number
  wbe_yes
  mbe_yes
  vendor_register
  newsletter_yes
  interview_order_business_certificate_form = True
---
# I added this code to prevent the "Are there any parties on the other side of this matter" question from appearing since there will never be a part on the other side
code: |
  other_parties.there_are_any = False
---
# I added this code to leave the signature fields and the signature date and county fields on the form blank when the attesting individuals would not be signing
code: |
  if users_signing == False:
    users[0].signature = ""
    users[1].signature = ""
    users[2].signature = ""
    signature_date = str = ""
    signature_address_county = ""
---
# I added this code to leave all of the third emergency contact fields blank when the user confirmed that there was no third emergency contact
code: |
  if third_emergency_contact_yes == False:
    emergency[2].name.first = ""
    emergency[2].name.last = ""
    emergency[2].address.address = ""
    emergency[2].address.unit = ""
    emergency[2].address.city = ""
    emergency[2].address.state = ""
    emergency[2].address.zip = ""
    emergency[2].phone_number = ""
    emergency[2].email = ""
---
# I have added this code to leave the second line of the Business Address field blank so that I could print the business[0].address_on_one_line() on the top line cleanly
code: |
  business1_address_line_two = ""
---
# I have added this code to leave the newsletter_email field blank if the user confirms that they do not want to receive the EDD Newsletter
code: |
  if newsletter_yes == False:
    newsletter_email = ""
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  business_certificate_form_intro
  interview_order_business_certificate_form
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  business_certificate_form_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: File_a_Business_Certificate_for_the_City_of_Cambridge
continue button field: business_certificate_form_intro
question: |
  File a Business Certificate for the City of Cambridge
subquestion: |
  This interview will help you to fill out a Business Certificate for the City of Cambridge. Make sure that you have the following information handy:
  
  - The name your business will be "Doing Business As."
  
  - The address for your business's physical location in the City of Cambridge.
  
  - The phone number and email address for your business.
  
  - The names and addresses of three individuals attesting to the validity of the information being provided on the form.
  
  - The names, addresses, phone numbers, and email addresses of at least two emergency contacts.
  
  It is important to note that the Business Certificate for the City of Cambridge will want either your Social Security number or your Federal ID number before filing, and this interview WILL NOT ask you a question regarding either of these numbers. Instead, you will need to fill out this confidential personal information yourself after the completed form has been generated for you.
  
  Additionally, this interview cannot yet e-file your form for you as a result of your needing to hand-write in confidential personal information. Once the completed form has been generated for you, you will need to print it out, write in the previously-mentioned confidential personal information, and bring the form to the City of Cambridge Clerk's Office to file it.
---
# This question collects the name information for the person filling out the form, and the date on which the interview is being completed/the form is being filled out
id: Name of Person Filling Form and Date
question: |
  Enter the name of Person filling out this form and the date that the form is being filled out.
fields:
  - "First Name": users[3].name.first
  - "Middle Name": users[3].name.middle
    required: False
  - "Last Name": users[3].name.last
  - "Date that Form is Being Filled Out": users4_date
    datatype: date
    default: |
          ${ today() }
---
# This question asks whether the form is being filed to certify a new business
id: New Business
question: |
  Is this form being filed to certify a new business?
yesno: new_business_yes
---
# This question asks whether the form is being filed to renew an existing business certification
id: Business Renewal
question: |
  Is this form being filed to renew a business that is already certified?
yesno: business_renewal_yes
---
# This is the exit or restart screen that will be displayed if a user selects 'No' for both New Business and Business Renewal
id: Exit or Restart
question: |
  You must be filing either to certify a new business or to renew an existing business certification.
sets: exit_or_restart
buttons:
  - Exit: exit
  - Restart: restart
mandatory: True
---
# This question asks what name the business seeking to be certified will be "Doing Business As," and provides some additional information about what exactly a DBA Name is and how it might differ depending on your legal business entity
id: Doing Business As Name
question: |
  Enter the business's "Doing Business As" name.
subquestion: | 
  For a newly-formed independent business, the "Doing Business As" name will be the same as the the entity's legal business name. If this new business is being certified on behalf of an existing LLC or Corporation, the "Doing Business As" name is a ficticious name that businesses can operate under that is different from the legal name of their parent LLC or corporation.
fields:
  - "Business DBA name": business1_dba_name
    maxlength: 45
---
# This question asks the user for the physical location address of the business seeking to be certified, and provides some information how it might differ depending on your legal business entity
id: Business Physical Location Address
question: |
  Enter the address of the business's physical location in the City of Cambridge.
subquestion: |
  If this is a business being certified on behalf of an existing LLC or Corporation, then this is the address of the physical location of the new business in Cambridge, not the address of the LLC or Corporation's physical location. If this is a newly-formed business, then this is simply the business's physical location in the City of Cambridge.
fields: 
  - "Street Address": business[0].address.address
  - "Apartment": business[0].address.unit
    required: False
  - "City": business[0].address.city
    default: "Cambridge"
  - "State": business[0].address.state
    default: "MA"
  - "Zip Code": business[0].address.zip
---
# This question asks for the type of business of the business seeking to be certified, and provides some information for how it refers your legal business entity and not something like 'Cookie Retailer'
id: Business Type
question: |
  What type of business is this?
subquestion: |
  "Type" here means the legal organizational form of the company. (i.e., corporation, partnership, sole proprietorship, limited liability company, etc.)
fields:
  - "Business type": business1_type1
    maxlength: 24
---
# This question asks for the name information for the first individual attesting to the legitimacy and accuracy of the information being provided in the interview and on the form, while also giving a warning once again that you will need three individuals to attest to the information's accuracy
id: First Attesting Individual Name
question: |
  Enter the name of the first attesting individual.
subquestion: |
  You will need three individuals to attest to the accuracy of the information previously given. Please include this person's corporate name and title if they are a corporate officer.
fields:
  - "First Name": users[0].name.first
  - "Middle Name": users[0].name.middle
    required: False
  - "Last Name": users[0].name.last
  - "Corporate Title (if applicable)": users[0].name.suffix
    required: False
---
# This question asks for the address information for the first individual attesting to the legitimacy and accuracy of the information being provided in the interview and on the form
id: First Attesting Individual Address
question: |
  Enter the address of the first attesting individual.
fields:
  - "Street Address": users[0].address.address
  - "Apartment": users[0].address.unit
    required: False
  - "City": users[0].address.city
  - "State": users[0].address.state
  - "Zip Code": users[0].address.zip
---
# This question asks for the name information for the second individual attesting to the legitimacy and accuracy of the information being provided in the interview and on the form
id: Second Attesting Individual Name
question: |
  Enter the name of the second attesting individual.
subquestion: |
  Please include this person's corporate name and title if they are a corporate officer.
fields:
  - "First Name": users[1].name.first
  - "Middle Name": users[1].name.middle
    required: False
  - "Last Name": users[1].name.last
  - "Corporate Title (if applicable)": users[1].name.suffix
    required: False
---
# This question asks for the address information for the second individual attesting to the legitimacy and accuracy of the information being provided in the interview and on the form
id: Second Attesting Individual Address
question: |
  Enter the address of the second attesting individual.
fields:
  - "Street Address": users[1].address.address
  - "Apartment": users[1].address.unit
    required: False
  - "City": users[1].address.city
  - "State": users[1].address.state
  - "Zip Code": users[1].address.zip
---
# This question asks for the name information for the first individual attesting to the legitimacy and accuracy of the information being provided in the interview and on the form
id: Third Attesting Individual Name
question: |
  Enter the name of the third attesting individual.
subquestion: |
  Please include this person's corporate name and title if they are a corporate officer.
fields:
  - "First Name": users[2].name.first
  - "Middle Name": users[2].name.middle
    required: False
  - "Last Name": users[2].name.last
  - "Corporate Title (if applicable)": users[2].name.suffix
    required: False
---
# This question asks for the address information for the second individual attesting to the legitimacy and accuracy of the information being provided in the interview and on the form
id: Third Attesting Individual Address
question: |
  Enter the address of the third attesting individual.
fields:
  - "Street Address": users[2].address.address
  - "Apartment": users[2].address.unit
    required: False
  - "City": users[2].address.city
  - "State": users[2].address.state
  - "Zip Code": users[2].address.zip
---
# This question asks whether ALL THREE of the attesting indviduals will be signing right now, for the purpose of determining whether or not to display the signature fields or to allow the attesting individuals to sign on the printed form at a later date
id: Attesting Individuals Signing Now
question: |
  Will all three of the attesting individuals be signing this form right now?
yesno: users_signing
---
# If the attesting individuals are signing right now, then this question will ask for the signature county and the date of signing (today's date)
id: Signature County
question: |
  Enter the county in which this form was signed by the attesting individuals, and the date on which it was signed.
fields:
  - "Signature county": signature_address_county
    maxlength: 31
  - Date of Signing: signature_date
    datatype: date
    default: |
          ${ today() }
---
# This question asks for the phone number and email address associated with the business
id: Business Contact Information
question: |
  Enter the phone number and email address of the business filing for certification or renewal.
fields:
  - "Business phone number": business[0].phone_number
    maxlength: 27
  - "Business email": business[0].email
    datatype: email
    maxlength: 30
---
# This question asks a security question that can be used by the City of Cambridge's Clerk's Office for future matters related to business certification to confirm the identity of the user filling out this interview, or the identity of anyone dealing with such matters on behalf of the individual filling out this interview
id: Security Question
question: |
  What did you want to be when you grew up?
subquestion: |
  This is a security question. The answer to this question may be used in future matters related to your business's certification with the City of Cambridge in order to confirm the identity of the person filling out this form.
fields:
  - "Security question": business1_security_question
    maxlength: 26
---
# This question asks for the name information for the first emergency contact and provides a disclaimer once again that you need at least two emergency contacts on the form, and explaining what the contact information will be used for and where it will be kept
id: Emergency Contact 1 Name
question: |
  Enter the name of the first emergency contact. 
subquestion: |
  You must include contact information for at least two emergency contacts. This individual's contact information will be kept confidential in the Emergency Communications Center and only used for notification purposes by the Emergency Communications Department and/or Police or Fire personnel.
fields:
  - "First Name": emergency[0].name.first
  - "Last Name": emergency[0].name.last
---
# This question asks for the address information for the first emergency contact
id: Emergency Contact 1 Address
question: |
  Enter the address for the first emergency contact.
fields:
  - "Street Address": emergency[0].address.address
  - "Apartment": emergency[0].address.unit
    required: False
  - "City": emergency[0].address.city
  - "State": emergency[0].address.state
  - "Zip Code": emergency[0].address.zip
---
# This question asks for the phone number and email address information for the first emergency contact
id: Emergency Contact 1 Phone Number and Email Address
question: |
  Enter the phone number and email address for the first emergency contact.
fields:
  - "Phone Number": emergency[0].phone_number
  - "Email Address": emergency[0].email
---
# This question asks for the name information for the second emergency contact and provides a disclaimer explaining what the contact information will be used for and where it will be kept
id: Emergency Contact 2 Name
question: |
  Enter the name of the second emergency contact.
subquestion: |
  This individual's contact information will be kept confidential in the Emergency Communications Center and only used for notification purposes by the Emergency Communications Department and/or Police or Fire personnel. 
fields:
  - "First Name": emergency[1].name.first
  - "Last Name": emergency[1].name.last
---
# This question asks for the address information for the second emergency contact
id: Emergency Contact 2 Address
question: |
  Enter the address for the second emergency contact.
fields:
  - "Street Address": emergency[1].address.address
  - "Apartment": emergency[1].address.unit
    required: False
  - "City": emergency[1].address.city
  - "State": emergency[1].address.state
  - "Zip Code": emergency[1].address.zip
---
# This question asks for the phone number and email address information for the second emergency contact
id: Emergency Contact 2 Phone Number and Email Address
question: |
  Enter the phone number and email address for the second emergency contact.
fields:
  - "Phone Number": emergency[1].phone_number
  - "Email Address": emergency[1].email
---
# This question asks if there is a third emergency contact present on the form for the purpose of determining whether or not to ask the questions regarding emergency contact 3's name, address, phone number and email information
id: Is There a Third Emergency Contact
question: |
  Will you be including the contact information for a third Emergency Contact at this time?
yesno: third_emergency_contact_yes
---
# This question asks for the name information for the third emergency contact and provides a disclaimer explaining what the contact information will be used for and where it will be kept
id: Emergency Contact 3 Name
question: |
  Enter the name of the third emergency contact.
subquestion: |
  This individual's contact information will be kept confidential in the Emergency Communications Center and only used for notification purposes by the Emergency Communications Department and/or Police or Fire personnel.
fields:
  - "First Name": emergency[2].name.first
  - "Last Name": emergency[2].name.last
---
# This question asks for the address information for the third emergency contact
id: Emergency Contact 3 Address
question: |
  Enter the address for the third emergency contact.
fields:
  - "Street Address": emergency[2].address.address
  - "Apartment": emergency[2].address.unit
    required: False
  - "City": emergency[2].address.city
  - "State": emergency[2].address.state
  - "Zip Code": emergency[2].address.zip
---
# This question asks for the phone number and email address information for the second emergency contact
id: Emergency Contact 3 Phone Number and Email Address
question: |
  Enter the phone number and email address for the third emergency contact.
fields:
  - "Phone Number": emergency[2].phone_number
  - "Email Address": emergency[2].email
---
# This question asks whether this is a Women's Business Enterprise (WBE) and provides a definition of what a WBE is
id: Women s Business Enterprise
question: |
  Is this business a Women's Business Enterprise?
subquestion: |
  A Women's Business Enterprise is a woman-owned business certified by the State Office of Minority and Women Owned Business Assistance (SOMWBA). 
fields:
  - "Women's business enterprise": wbe_yes
    datatype: yesnoradio
---
# This question asks whether this is a Minority Business Enterprise (MBE) and provides a definition of what a MBE is
id: Minority Business Enterprise
question: |
  Is this business a Minority Business Enterprise?
subquestion: |
  A Minority Business Enterprise is a minority-owned business certified by the State Office of Minority and Women Owned Business Assistance (SOMWBA).
fields:
  - "Minority business enterprise": mbe_yes
    datatype: yesnoradio
---
# This question asks whether the user wants to register the business seeking certification with the city of Cambridge's vendor registry and explains the benefit of doing so
id: Register to Become a Vendor
question: |
  Would you like to register this business as a vendor in the City of Cambridge?
subquestion: |
  The Vendor Registry provides an opportunity for local and State Vendors to be notified when the City of Cambridge solicits a bid for the commodity or service that your business offers.
fields:
  - "Vendor register": vendor_register
    datatype: yesnoradio
---
# This question asks the user whether they would like to sign up their business to receive a newsletter from the Economic Opportunity and Development Division and explains the benefit of doing so
id: Economic Development Division Newsletter
question: |
  Would you like to sign up your business to receive the Economic Opportunity and Development Division Newsletter?
subquestion: |
  The Economic Opportunity and Development Division offers businesses owned by historically disadvantaged persons (women, people of color, veterans, disabled individuals, etc.) assistance and information. The newsletter includes information and dates about events, workshops and trainings, marketing opportunities, and guidance for applying for government contracts from the City of Cambridge.
fields:
  - "Sign up to receive the newsletter?": newsletter_yes
    datatype: yesnoradio
  - "Business email": newsletter_email
    show if: newsletter_yes
---
id: preview business_certificate_form
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_business_certificate_form'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: business_certificate_form_preview_question    
---
code: |
  signature_fields = ['users[0].signature', 'users[1].signature', 'users[2].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  addresses_to_search = [user.address for user in users]
---
id: business certificate form review screen
event: review_business_certificate_form
question: |
  Review your answers
review:
  - Edit: new_business_yes
    button: |
      **New business**:
      ${ new_business_yes }
  - Edit: business_renewal_yes
    button: |
      **Business renewal**:
      ${ business_renewal_yes }
  - Edit: business1_dba_name
    button: |
      **Business DBA name**:
      ${ business1_dba_name }
  - Edit: business[0].address.address
    button: |
      **Business conducted at**:
      ${ business[0].address.on_one_line() }
  - Edit: business[0].phone_number
    button: |
      **Business phone number**:
      ${ business[0].phone_number }
  - Edit: business[0].email
    button: |
      **Business email**:
      ${ business[0].email }
  - Edit: business1_type1
    button: |
      **Business type**:
      ${ business1_type1 }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: emergency.revisit
    button: |
      **Emergency**

      % for item in emergency:
        * ${ item }
      % endfor
  - Edit: signature_date
    button: |
      **Date of attesting individual signature**:
      ${ signature_date }
  - Edit: signature_address_county
    button: |
      **Attesting individual signature county**:
      ${ signature_address_county }
  - Edit: business1_security_question
    button: |
      **Security question**:
      ${ business1_security_question }
  - Edit: users4_date
    button: |
      **Date of signature of person filling out this interview**:
      ${ users4_date }
  - Edit: business1_address_line_two
    button: |
      **Business address line two**:
      ${ business1_address_line_two }
  - Edit: wbe_yes
    button: |
      **Women's business enterprise**:
      ${ wbe_yes }
  - Edit: mbe_yes
    button: |
      **Minority business enterprise**:
      ${ mbe_yes }
  - Edit: vendor_register
    button: |
      **Vendor register**:
      ${ vendor_register }
  - Edit: newsletter_email
    button: |
      **Newsletter email**:
      ${ newsletter_email }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - address.address
  - name.first
  - signature
confirm: True

---
continue button field: emergency.revisit
question: |
  Edit emergency contacts
subquestion: |
  ${ emergency.table }

  ${ emergency.add_action() }
---
table: emergency.table
rows: emergency
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - name.first
  - address.address
  - phone_number
  - email
confirm: True

---
id: download business_certificate_form
event: business_certificate_form_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_business_certificate_form'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - business_certificate_form_Post_interview_instructions: ALDocument.using(title="Instructions", filename="business_certificate_form_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - business_certificate_form_attachment: ALDocument.using(title="File a Business Certificate for the City of Cambridge", filename="business_certificate_form", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[business_certificate_form_Post_interview_instructions, business_certificate_form_attachment], filename="business_certificate_form", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[business_certificate_form_attachment],  filename="business_certificate_form", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachments:
  - name: Post-interview-Instructions
    filename: business_certificate_form_next_steps
    docx template file: business_certificate_form_next_steps.docx
    variable name: business_certificate_form_Post_interview_instructions[i]
  - name: business certificate form
    filename: business_certificate_form
    variable name: business_certificate_form_attachment[i]
    skip undefined: True
    pdf template file: business_certificate_form.pdf
    fields:
      - "new_business_yes": ${ new_business_yes }
      - "business_renewal_yes": ${ business_renewal_yes }
      - "business1_dba_name": ${ business1_dba_name }
      - "business1_conducted_at": ${ business[0].address.on_one_line() }
      - "business1_phone_number1": ${ business[0].phone_number }
      - "business1_type1": ${ business1_type1 }
      - "business1_address_zip": ${ business[0].address.zip }
      - "users1_address_on_one_line": ${ users[0].address.on_one_line() }
      - "users1_name_full": ${ users[0] }
      - "users2_name_full": ${ users[1] }
      - "users2_address_on_one_line": ${ users[1].address.on_one_line() }
      - "users3_name_full": ${ users[2] }
      - "users3_address_on_one_line": ${ users[2].address.on_one_line() }
      - "users1_signature": ${ users[0].signature_if_final(i) }
      - "signature_date": ${ signature_date }
      - "signature_address_county": ${ signature_address_county }
      - "users2_signature": ${ users[1].signature_if_final(i) }
      - "users3_signature": ${ users[2].signature_if_final(i) }
      - "business1_name1": ${ business1_dba_name }
      - "business1_address_on_one_line": ${ business[0].address.on_one_line() }
      - "business1_phone_number": ${ business[0].phone_number }
      - "business1_email": ${ business[0].email }
      - "business1_type2": ${ business1_type1 }
      - "business1_security_question": ${ business1_security_question }
      - "emergency1_name_first": ${ emergency[0].name.first }
      - "emergency1_name_last": ${ emergency[0].name.last }
      - "emergency1_address_line_one": ${ emergency[0].address.line_one() }
      - "emergency1_address_city": ${ emergency[0].address.city }
      - "emergency1_phone_number": ${ emergency[0].phone_number }
      - "emergency1_email": ${ emergency[0].email }
      - "emergency2_name_last": ${ emergency[1].name.last }
      - "emergency2_name_first": ${ emergency[1].name.first }
      - "emergency2_address_line_one": ${ emergency[1].address.line_one() }
      - "emergency2_address_city": ${ emergency[1].address.city }
      - "emergency2_phone_number": ${ emergency[1].phone_number }
      - "emergency2_email": ${ emergency[1].email }
      - "emergency3_name_last": ${ emergency[2].name.last }
      - "emergency3_name_first": ${ emergency[2].name.first }
      - "emergency3_address_city": ${ emergency[2].address.city }
      - "emergency3_address_line_one": ${ emergency[2].address.line_one() }
      - "emergency3_phone_number": ${ emergency[2].phone_number }
      - "emergency3_email": ${ emergency[2].email }
      - "users4_name_full": ${ users[3] }
      - "users4_date": ${ users4_date.format() }
      - "business1_name2": ${ business1_dba_name }
      - "business1_address_line_one": ${ business[0].address.on_one_line() }
      - "business1_address_line_two": ${ business1_address_line_two }
      - "business1_name3": ${ business1_dba_name }
      - "wbe_yes": ${ wbe_yes }
      - "mbe_yes": ${ mbe_yes }
      - "vendor_register_yes": ${ vendor_register }
      - "vendor_register_no": ${ not vendor_register }
      - "newsletter_email": ${ newsletter_email }


